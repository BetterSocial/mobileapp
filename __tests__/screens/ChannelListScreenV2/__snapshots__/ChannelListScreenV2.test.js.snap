// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ChannelListScreenV2 RENDER should match snapshot 1`] = `
<RCTScrollView
  ListEmptyComponent={null}
  ListHeaderComponent={
    <React.Fragment>
      <View
        style={
          Object {
            "height": 52,
          }
        }
      >
        <Search
          animatedValue={0}
          isAnon={false}
          onPress={[Function]}
        />
      </View>
      <HorizontalTab
        onSelectedTabChange={[Function]}
        selectedTab={0}
        tabs={
          Array [
            <Memo(ChannelListTabItem)
              name="@undefined"
              testID="horizontal-tab-0"
              type="SIGNED"
              unreadCount={0}
            />,
            <Memo(ChannelListTabItem)
              name="Anonymous"
              picture={
                Object {
                  "testUri": "../../../src/assets/images/AnonymousProfile.png",
                }
              }
              testID="horizontal-tab-1"
              type="ANONYMOUS"
              unreadCount={3}
            />,
          ]
        }
      />
      <View
        style={
          Object {
            "display": "flex",
          }
        }
      >
        <Unknown />
      </View>
      <View
        style={
          Object {
            "display": "none",
          }
        }
      >
        <AnonymousChannelListScreen />
      </View>
    </React.Fragment>
  }
  contentContainerStyle={
    Object {
      "flexGrow": 1,
    }
  }
  data={Array []}
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  updateCellsBatchingPeriod={50}
  viewabilityConfigCallbackPairs={Array []}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
    >
      <View
        style={
          Object {
            "height": 52,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#FFFFFF",
              "borderBottomColor": "#F5F6F7",
              "borderBottomWidth": 1,
              "flexDirection": "row",
              "left": 0,
              "marginBottom": 8,
              "marginTop": 0,
              "paddingBottom": 7,
              "paddingTop": 7,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": 10,
            }
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "alignSelf": "center",
                  "backgroundColor": "#F5F6F7",
                  "borderRadius": 8,
                  "flex": 1,
                  "flexDirection": "row",
                  "height": 36,
                  "marginLeft": 20,
                  "marginRight": 12,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignSelf": "center",
                    "justifyContent": "center",
                    "marginLeft": 8,
                  }
                }
              >
                <View />
              </View>
              <Text
                style={
                  Object {
                    "alignSelf": "center",
                    "color": "#828282",
                    "flex": 1,
                    "fontFamily": "Inter-Regular",
                    "fontSize": 14,
                    "lineHeight": 36,
                    "paddingBottom": 0,
                    "paddingStart": 10,
                    "paddingTop": 0,
                  }
                }
              >
                Search Users
              </Text>
            </View>
          </View>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginEnd": 8,
                "opacity": 1,
                "paddingBottom": 9,
                "paddingLeft": 8,
                "paddingRight": 12,
                "paddingTop": 9,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#4782D7",
                  "fontFamily": "Inter-SemiBold",
                  "fontSize": 12,
                  "lineHeight": 14.52,
                  "marginRight": 11,
                }
              }
            >
              New Chat
            </Text>
            <View>
              <View />
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#FFFFFF",
            "borderBottomColor": "#F5F6F7",
            "borderBottomWidth": 1,
            "display": "flex",
            "flexDirection": "row",
            "justifyContent": "center",
            "width": 300,
          }
        }
      >
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderBottomWidth": 2,
                "display": "flex",
                "flex": 1,
                "height": 48,
                "justifyContent": "center",
                "opacity": 1,
              },
              Object {
                "borderBottomColor": "#4782D7",
              },
            ]
          }
        >
          <View
            style={
              Object {
                "display": "flex",
                "maxWidth": 150,
              }
            }
          >
            <View
              style={
                Object {
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "maxWidth": 110,
                  "paddingLeft": 20,
                  "paddingRight": 20,
                }
              }
              testID="horizontal-tab-0"
            >
              <View
                style={
                  Array [
                    Object {
                      "overflow": "hidden",
                    },
                    Object {
                      "borderRadius": 10,
                      "height": 20,
                      "marginEnd": 6,
                      "width": 20,
                    },
                  ]
                }
              >
                <FastImageView
                  defaultSource={null}
                  resizeMode="cover"
                  source={null}
                />
              </View>
              <Text
                ellipsizeMode="tail"
                numberOfLines={1}
                style={
                  Object {
                    "color": "#4782D7",
                    "fontFamily": "Inter-Medium",
                    "fontSize": 14,
                  }
                }
              >
                as 
                @undefined
              </Text>
            </View>
          </View>
        </View>
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          style={
            Object {
              "alignItems": "center",
              "borderBottomColor": undefined,
              "display": "flex",
              "flex": 1,
              "height": 48,
              "justifyContent": "center",
              "opacity": 0.1,
            }
          }
        >
          <View
            style={
              Object {
                "display": "flex",
                "maxWidth": 150,
              }
            }
          >
            <View
              style={
                Object {
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "maxWidth": 110,
                  "paddingLeft": 20,
                  "paddingRight": 20,
                }
              }
              testID="horizontal-tab-1"
            >
              <View
                style={
                  Array [
                    Object {
                      "overflow": "hidden",
                    },
                    Object {
                      "borderRadius": 10,
                      "height": 20,
                      "marginEnd": 6,
                      "width": 20,
                    },
                  ]
                }
              >
                <FastImageView
                  defaultSource={null}
                  resizeMode="cover"
                  source={
                    Object {
                      "testUri": "../../../src/assets/images/AnonymousProfile.png",
                    }
                  }
                />
              </View>
              <Text
                ellipsizeMode="tail"
                numberOfLines={1}
                style={
                  Object {
                    "color": "#107793",
                    "fontFamily": "Inter-Medium",
                    "fontSize": 14,
                  }
                }
              >
                as 
                Anonymous
              </Text>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#FF2E63",
                    "borderRadius": 8,
                    "bottom": 4,
                    "display": "flex",
                    "height": 16,
                    "justifyContent": "center",
                    "width": 16,
                  }
                }
                testID="horizontal-tab-1-unread-count"
              >
                <Text
                  style={
                    Object {
                      "color": "#FFFFFF",
                      "fontFamily": "Inter-Medium",
                      "fontSize": 10,
                    }
                  }
                >
                  3
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "display": "flex",
          }
        }
      />
      <View
        style={
          Object {
            "display": "none",
          }
        }
      >
        <View
          data={Array []}
          disableVirtualization={false}
          getItem={[Function]}
          getItemCount={[Function]}
          horizontal={false}
          initialNumToRender={10}
          keyExtractor={[Function]}
          maxToRenderPerBatch={10}
          onContentSizeChange={[Function]}
          onEndReachedThreshold={2}
          onLayout={[Function]}
          onMomentumScrollEnd={[Function]}
          onScroll={[Function]}
          onScrollBeginDrag={[Function]}
          onScrollEndDrag={[Function]}
          removeClippedSubviews={false}
          renderItem={[Function]}
          scrollEnabled={false}
          scrollEventThrottle={50}
          stickyHeaderIndices={Array []}
          updateCellsBatchingPeriod={50}
          viewabilityConfigCallbackPairs={Array []}
          windowSize={21}
        />
      </View>
    </View>
  </View>
</RCTScrollView>
`;
