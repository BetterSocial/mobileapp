// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ModalAction element should run correctly should match snapshot 1`] = `
<Modal
  animationType="none"
  deviceHeight={null}
  deviceWidth={null}
  hardwareAccelerated={false}
  hideModalContentWhileAnimating={false}
  onBackdropPress={[Function]}
  onModalHide={[Function]}
  onModalWillHide={[Function]}
  onModalWillShow={[Function]}
  onRequestClose={[Function]}
  panResponderThreshold={4}
  scrollHorizontal={false}
  scrollOffset={0}
  scrollOffsetMax={0}
  scrollTo={null}
  statusBarTranslucent={false}
  supportedOrientations={
    Array [
      "portrait",
      "landscape",
    ]
  }
  swipeThreshold={100}
  transparent={true}
  visible={false}
>
  <View
    accessible={true}
    focusable={true}
    forwardedRef={[Function]}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "black",
        "bottom": 0,
        "height": 300,
        "left": 0,
        "opacity": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "width": 300,
      }
    }
  />
  <View
    deviceHeight={null}
    deviceWidth={null}
    forwardedRef={[Function]}
    hideModalContentWhileAnimating={false}
    onBackdropPress={[Function]}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    panResponderThreshold={4}
    pointerEvents="box-none"
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    statusBarTranslucent={false}
    style={
      Object {
        "flex": 1,
        "justifyContent": "center",
        "margin": 15,
        "transform": Array [
          Object {
            "translateY": 0,
          },
        ],
      }
    }
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
  >
    <View
      style={
        Object {
          "backgroundColor": "white",
          "padding": 24,
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "justifyContent": "center",
            "opacity": 1,
            "paddingVertical": 18,
          }
        }
        testID="pressMessage"
      >
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <Text
            style={
              Object {
                "fontSize": 16,
                "fontWeight": "bold",
              }
            }
          >
            Message 
          </Text>
          <View
            style={
              Object {
                "flex": 1,
              }
            }
            transition={
              <Transition.Together>
                <Transition.Change
                  interpolation="easeInOut"
                />
                <Transition.In
                  type="fade"
                />
              </Transition.Together>
            }
          />
        </View>
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "justifyContent": "center",
            "opacity": 1,
            "paddingVertical": 18,
          }
        }
        testID="pressMessageAnonym"
      >
        <Text
          style={
            Object {
              "color": "#F5F6F7",
              "fontSize": 16,
              "fontWeight": "bold",
            }
          }
        >
          Message Anonymously
        </Text>
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "justifyContent": "center",
            "opacity": 1,
            "paddingVertical": 18,
          }
        }
        testID="pressView"
      >
        <Text
          style={
            Object {
              "fontSize": 16,
              "fontWeight": "bold",
            }
          }
        >
          View 
          's Profile 
        </Text>
      </View>
    </View>
  </View>
</Modal>
`;
