// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`component UserProfile UserProfile renders correctly 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "flexDirection": "row",
      "justifyContent": "space-between",
      "paddingBottom": 12,
      "paddingTop": 11,
    }
  }
>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "opacity": 1,
      }
    }
  >
    <Image
      height={32}
      source={
        Object {
          "uri": "https://gravatar.com/avatar/f6b72e03802331ff150526be144d899e?s=400&d=robohash&r=x",
        }
      }
      style={
        Object {
          "borderRadius": 16,
          "height": 32,
          "marginRight": 8,
          "width": 32,
        }
      }
      width={32}
    />
    <View>
      <Text
        style={
          Object {
            "color": "#000000",
            "fontFamily": "Inter-Semi-bold",
            "fontSize": 14,
            "fontWeight": "bold",
          }
        }
      >
        user Test
      </Text>
      <Text
        style={
          Object {
            "color": "#828282",
            "fontFamily": "Inter-Regular",
            "fontSize": 12,
          }
        }
      >
        Your username is visible
      </Text>
    </View>
  </View>
  <View
    animationSpeed={300}
    circleColor="white"
    disabled={false}
    icon={null}
    isOn={false}
    label="Anonymity"
    labelStyle={
      Object {
        "color": "#828282",
        "fontFamily": "Inter-Regular",
        "fontSize": 12,
      }
    }
    offColor="#F5F5F5"
    onColor="#2F80ED"
    onToggle={[Function]}
    size="small"
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
      }
    }
    thumbOffStyle={Object {}}
    thumbOnStyle={Object {}}
    trackOffStyle={Object {}}
    trackOnStyle={Object {}}
    useNativeDriver={true}
  >
    <Text
      style={
        Array [
          Object {
            "marginHorizontal": 10,
          },
          Object {
            "color": "#828282",
            "fontFamily": "Inter-Regular",
            "fontSize": 12,
          },
        ]
      }
    >
      Anonymity
    </Text>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "#F5F5F5",
          "borderRadius": 20,
          "justifyContent": "center",
          "opacity": 1,
          "padding": 10,
          "width": 40,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "white",
            "borderRadius": 7.5,
            "elevation": 1.5,
            "height": 15,
            "justifyContent": "center",
            "left": 0,
            "margin": 4,
            "position": "absolute",
            "shadowColor": "#000",
            "shadowOffset": Object {
              "height": 2,
              "width": 0,
            },
            "shadowOpacity": 0.2,
            "shadowRadius": 2.5,
            "transform": Array [
              Object {
                "translateX": 0,
              },
            ],
            "width": 15,
          }
        }
      />
    </View>
  </View>
</View>
`;

exports[`component UserProfile UserProfile snapshot 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "flexDirection": "row",
      "justifyContent": "space-between",
      "paddingBottom": 12,
      "paddingTop": 11,
    }
  }
>
  <ForwardRef
    onPress={[Function]}
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
      }
    }
  >
    <Image
      height={32}
      source={
        Object {
          "uri": "https://gravatar.com/avatar/f6b72e03802331ff150526be144d899e?s=400&d=robohash&r=x",
        }
      }
      style={
        Object {
          "borderRadius": 16,
          "height": 32,
          "marginRight": 8,
          "width": 32,
        }
      }
      width={32}
    />
    <View>
      <Text
        style={
          Object {
            "color": "#000000",
            "fontFamily": "Inter-Semi-bold",
            "fontSize": 14,
            "fontWeight": "bold",
          }
        }
      >
        user Test
      </Text>
      <Text
        style={
          Object {
            "color": "#828282",
            "fontFamily": "Inter-Regular",
            "fontSize": 12,
          }
        }
      >
        Your username is visible
      </Text>
    </View>
  </ForwardRef>
  <ToggleSwitch
    animationSpeed={300}
    circleColor="white"
    disabled={false}
    icon={null}
    isOn={false}
    label="Anonymity"
    labelStyle={
      Object {
        "color": "#828282",
        "fontFamily": "Inter-Regular",
        "fontSize": 12,
      }
    }
    offColor="#F5F5F5"
    onColor="#2F80ED"
    onToggle={[Function]}
    size="small"
    thumbOffStyle={Object {}}
    thumbOnStyle={Object {}}
    trackOffStyle={Object {}}
    trackOnStyle={Object {}}
    useNativeDriver={true}
  />
</View>
`;
